trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: AzureCLI@2
    displayName: 'Install Azure CLI'
    inputs:
      azureSubscription: 'Visual Studio Enterprise Subscription(8377ac7f-7423-4f7a-909b-0eed6a86ec22)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash'

  - task: AzureCLI@2
    displayName: 'Create AKS Cluster'
    inputs:
      azureSubscription: 'Visual Studio Enterprise Subscription(8377ac7f-7423-4f7a-909b-0eed6a86ec22)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'az aks create --resource-group rg-glb-03 --name aksdemo3 --node-count 1 --node-vm-size Standard_D2ls_v5 --generate-ssh-keys'

  - task: Docker@2
    displayName: 'Build and push Docker image'
    inputs:
      containerRegistry: 'aksdevopsacr2912'
      repository: 'aksdevopsacr2912/app1nginx'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: 'latest'

  - task: Kubernetes@1
    displayName: 'Deploy to AKS'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'your-azure-service-connection'
      azureResourceGroup: 'your-resource-group'
      kubernetesCluster: 'your-aks-cluster'
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'inline'
      inline: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: demodeployment01
          labels:
            app: app1nginx
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: app1nginx
          template:
            metadata:
              labels:
                app: app1ningx
            spec:
              containers:
                - name: miprimercont
                  image: aksdevopsacr2912/app1nginx:latest
                  ports:
                    - containerPort: 80